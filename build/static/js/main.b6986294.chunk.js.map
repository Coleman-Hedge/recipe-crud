{"version":3,"sources":["RecipeCreate.js","RecipeList.js","RecipeData.js","App.js","index.js"],"names":["RecipeCreate","_ref","recipes","handleSetRecipes","initialFormData","name","cuisine","photo","rating","ingredients","preparation","formData","setFormData","useState","handleChange","_ref2","target","value","handleSubmit","event","console","log","preventDefault","React","createElement","onSubmit","hmtlFor","id","type","onChange","htmlFor","row","col","onClick","RecipeList","setRecipes","className","map","recipe","index","key","src","handleDelete","indexToDelete","filter","post","RecipeData","App","newRecipe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6986294.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction RecipeCreate({recipes, handleSetRecipes}) {\n\n  // TODO: When the form is submitted, a new recipe should be created, and the form contents cleared.\n  // TODO: Add the required input and textarea form elements.\n  // TODO: Add the required submit and change handlers\n  \n//   const [name, setName] = useState(\"\");\n//   const [cuisine, setCuisine] = useState(\"\");\n//   const [photo, setPhoto] = useState(\"\");\n//   const [rating, setRating] = useState(\"\");\n//   const [ingredients, setIngredients] = useState(\"\");\n//   const [preparation, setPreparation] = useState(\"\");\n  const initialFormData = {\n    name: \"\",\n    cuisine: \"\",\n    photo: \"\",\n    rating: 0,\n    ingredients: \"\",\n    preparation: \"\",\n  }\n  \n  const [formData, setFormData] = useState(initialFormData);\n  const handleChange = ({target}) => {\n    setFormData({\n      ...formData,\n      [target.name]: target.value\n    });\n  };\n  const handleSubmit = (event) => {\n    console.log(\"Submitted\");\n    event.preventDefault();\n    handleSetRecipes(formData);\n    \n    setFormData(initialFormData);\n  }\n  \n  return (\n    <form name=\"create\" onSubmit={handleSubmit}>\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <label hmtlFor=\"name\">\n                Name:\n                <input id=\"name\" type=\"text\" name=\"name\" onChange={handleChange} value={formData.name} />\n            </label>\n            </td>\n            <td>\n              <label hmtlFor=\"cuisine\">\n                Cuisine:\n                <input id=\"cuisine\" type=\"text\" name=\"cuisine\" onChange={handleChange} value={formData.cuisine} />\n              </label>\n            </td>\n            <td>\n              <label hmtlFor=\"photo\">\n                Photo:\n                <input id=\"photo\" type=\"url\" name=\"photo\" onChange={handleChange} value={formData.photo} />\n              </label>\n            </td>\n            <td>\n              <label htmlFor=\"ingredients\">\n                Ingredients:\n                <textarea name=\"ingredients\" id=\"ingredients\" row={3} col={10} onChange={handleChange} value={formData.ingredients} />\n              </label>\n            </td>\n            <td>\n              <label htmlFor=\"preparation\">\n                Preparation:\n                <textarea name=\"preparation\" id=\"preparation\" row={3} col={10} onChange={handleChange} value={formData.preparation} />\n              </label>\n            </td>\n            <td>\n              <button type=\"submit\" onClick={handleSubmit}>Create</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nexport default RecipeCreate;\n","import React from \"react\";\n\nfunction RecipeList({recipes, setRecipes}) {\n  \n  // TODO: Display the list of recipes using the structure of table that is provided.\n  // TODO: Create at least one additional component that is used by this component.\n  // TODO: Each recipe row must have a delete button - <button name=\"delete\">Delete</button> - that deletes the post when clicked\n  const handleDelete = (indexToDelete) =>\n    setRecipes((recipes) =>\n      recipes.filter((post, index) => index !== indexToDelete)\n    );\n  \n\n  return (\n    <div className=\"recipe-list\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Cuisine</th>\n            <th>Photo</th>\n            <th>Ingredients</th>\n            <th>Preparation</th>\n          </tr>\n        </thead>\n        <tbody>\n            {recipes.map((recipe, index) => (\n            <tr>\n              <td>\n                <p key={index} className=\"name\">{recipe.name}</p>\n              </td>\n              <td>\n                <p key={index} className=\"cuisine\">{recipe.cuisine}</p>\n              </td>\n                <img src={recipe.photo} key={index} />\n              <td>\n                <p key={index} className=\"ingredients\">{recipe.ingredients}</p>\n              </td>\n              <td>\n                <p key={index} className=\"preparation\">{recipe.preparation}</p>\n              </td>\n              <td>\n                <button name=\"delete\" onClick={() => handleDelete(index)}>Delete</button>\n              </td>\n            </tr>\n            ))};\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default RecipeList;\n","/**\n* This is the data that is initially loaded.\n* Please do not modify this file.\n*/\n\nconst RecipeData = [\n  {\n    name: \"Tuna Poke with Mango\",\n    cuisine: \"Hawaiian\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/tunapokebowlwithmango22.jpg\",\n    ingredients: \"1 package of sushi grade tuna. 1 cup cooked quinoa ½ avocado, sliced. ½ mango, cubed. 1 shredded carrot. 1 small sliced cucumber. poke sauce.\",\n    preparation: \"1. Chop tuna into cubes. 2. Toss with 1 tbsp sesame oil and 1 tbsp tamari. Set aside. 3. Layer your poke bowl starting with quinoa. 4. Whisk all poke sauce ingredients in a bowl and pour over the poke bowl. 5. Garnish with sesame seeds and furikake. 6. Top with chopped scallions.\"\n  },\n  {\n    name: \"Guacamole\",\n    cuisine: \"Mexican\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/017.jpg\",\n    ingredients: \"3 ripe avocados. ¾ cup finely chopped Roma tomato. 2 serrano chiles very finely chopped (seeded and deveined). 3 heaping tablespoons of finely chopped onion. 3 tablespoons of minced cilantro. Salt to taste\",\n    preparation: \"1. Remove the flesh of the avocados. 2. Mash the avocados with the back of a fork. 3. Add the other ingredients and incorporate evenly. 4. Add salt to taste.\"\n  },\n];\n\nexport default RecipeData;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeCreate from \"./RecipeCreate\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeData from \"./RecipeData\"\n\nfunction App() {\n  const [recipes, setRecipes] = useState(RecipeData);\n  const handleSetRecipes = (newRecipe) => {\n    setRecipes([...recipes, newRecipe]);\n  };\n\n  // TODO: Add the ability for the <RecipeList /> component to list and delete an existing recipe.\n  // TODO: Add the ability for the <RecipeCreate /> component to create new recipes.\n\n  \n  return (\n    <div className=\"App\">\n      <header><h1>Delicious Food Recipes</h1></header>\n      <RecipeList recipes={recipes} setRecipes={setRecipes} />\n      <RecipeCreate recipes={recipes} handleSetRecipes={handleSetRecipes} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}